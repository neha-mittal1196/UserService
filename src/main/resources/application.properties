spring.application.name=UserService

server.port=${SERVER_PORT}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=${USER_SERVICE_DB_URL}
spring.datasource.username=${USER_SERVICE_DB_USER}
#spring.datasource.password=${USER_SERVICE_DB_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql: true
spring.flyway.baselineOnMigrate = true

# Logging configuration
#logging.level.org.springframework.security.*=trace
logging.level.org.springframework.*=trace

#Adding a client for oauth server
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types=["authorization_code","refresh_token"]
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-authentication-methods=["client_secret_basic"]
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-id=oidc-client
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-secret={noop}secret
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.post-logout-redirect-uris=["http:\/\/127.0.0.1:8080\/"]
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.redirect-uris=["http:\/\/127.0.0.1:8080\/login\/oauth2\/code\/oidc-client"]
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes=["openid","profile"]
#spring.security.oauth2.authorizationserver.client.oidc-client.require-authorization-consent=true
#spring.security.user.name=user
#spring.security.user.password=password

